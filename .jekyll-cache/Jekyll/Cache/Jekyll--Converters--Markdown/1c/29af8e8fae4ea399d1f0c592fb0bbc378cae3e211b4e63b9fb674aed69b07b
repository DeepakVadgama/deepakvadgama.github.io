I"y@<p>I’ve been working on a web application using AngularJS and bootstrap. 
Most pages have forms that must be validated and user actions to be acknowledged (success/failure). 
<a href="http://getbootstrap.com/">Bootstrap</a> provides <a href="http://getbootstrap.com/components/#alerts">simple way</a> to add alerts for achieve this.</p>

<figure>
 <a href="https://deepakvadgama.com/images/blog/sejal/login-alert.png"><img src="https://deepakvadgama.com/images/blog/sejal/login-alert.png" /></a>
</figure>

<p>Easiest way to add these alerts dynamically (with AngularJS) is to create a boolean flag in $scope, and use ng-if in html to display the alert.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">ng-if=</span><span class="s">"loginFailed"</span> <span class="na">class=</span><span class="s">"alert alert-danger alert-dismissible"</span> <span class="na">role=</span><span class="s">"alert"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"close"</span> <span class="na">data-dismiss=</span><span class="s">"alert"</span> <span class="na">aria-label=</span><span class="s">"Close"</span><span class="nt">&gt;&lt;/button&gt;</span>
  Failed to sign in!
<span class="nt">&lt;/div&gt;</span></code></pre></figure>

<p>Though very quickly, these number of validations sky rocket (especially for large forms like register page), and adding a boolean 
variable in $scope and creating div tag in html for each validation becomes cumbersome. Also, code becomes too large &amp; lot less readable.</p>

<h2 id="solution">Solution</h2>

<p>All these alerts can be clubbed into AlertService. Subsequently, all controllers throughout the application can add alerts to respective pages
using that service.</p>

<p>Let’s walk through the solution code.</p>

<h2 id="step-1-create-alertservice">Step 1: Create AlertService</h2>

<p>Create alert service to be used across the application.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="dl">'</span><span class="s1">app</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="dl">'</span><span class="s1">AlertService</span><span class="dl">'</span><span class="p">,</span> <span class="p">[</span><span class="dl">'</span><span class="s1">$rootScope</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">$timeout</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$rootScope</span><span class="p">,</span> <span class="nx">$timeout</span><span class="p">)</span> <span class="p">{</span>

        <span class="c1">// clear alert after routing</span>
        <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="dl">'</span><span class="s1">$stateChangeSuccess</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
            <span class="nx">alertService</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
        <span class="p">});</span>
        
        <span class="c1">// alerts array on root scope so that all controllers can access it</span>
        <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">alerts</span> <span class="o">=</span> <span class="p">[];</span>
        <span class="k">return</span> <span class="p">{</span>
        
            <span class="na">add</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">type</span><span class="p">,</span> <span class="nx">msg</span><span class="p">,</span> <span class="nx">section</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">section</span> <span class="o">==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="nx">section</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>  <span class="c1">//default section number</span>
                <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">alerts</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
                    <span class="dl">'</span><span class="s1">type</span><span class="dl">'</span><span class="p">:</span> <span class="nx">type</span><span class="p">,</span> <span class="dl">'</span><span class="s1">msg</span><span class="dl">'</span><span class="p">:</span> <span class="nx">msg</span><span class="p">,</span> <span class="dl">'</span><span class="s1">section</span><span class="dl">'</span><span class="p">:</span> <span class="nx">section</span><span class="p">,</span> <span class="na">close</span><span class="p">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                        <span class="k">return</span> <span class="nx">alertService</span><span class="p">.</span><span class="nx">closeAlert</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
                    <span class="p">}</span>
                <span class="p">});</span>

                <span class="c1">// If you want alerts to disappear automatically after few seconds.</span>
                <span class="c1">// $timeout(function(){</span>
                <span class="c1">//     alertService.closeAlert(this);</span>
                <span class="c1">// }, 5000);</span>
            <span class="p">},</span>
            <span class="na">closeAlert</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">alert</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">closeAlertIdx</span><span class="p">(</span><span class="nx">$rootScope</span><span class="p">.</span><span class="nx">alerts</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">alert</span><span class="p">));</span>
            <span class="p">},</span>
            <span class="na">closeAlertIdx</span><span class="p">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">alerts</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
            <span class="p">},</span>
            <span class="na">clear</span><span class="p">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">alerts</span> <span class="o">=</span> <span class="p">[];</span>
            <span class="p">}</span>
        <span class="p">};</span>
    <span class="p">}]);</span></code></pre></figure>

<p>The alert service retains all the alerts in rootscope so that all controllers can access alerts array. 
It exposes functions add, close and clear for respective actions.</p>

<ul>
  <li>Type = type of bootstrap alert - warning, success, danger etc.</li>
  <li>Msg = message to be displayed to the user</li>
  <li>Section = section of html page in which you want the alerts to be displayed. More on this later.</li>
</ul>

<p>On route change success, clear the alerts so that alerts of one page are not displayed on other. 
The event to listen for is $stateChangeSuccess (since I am using State Router). 
 If you are using older router of AngularJS please use $routeChangeSuccess</p>

<p>Note: Please add the file in index.html script tag.</p>

<h2 id="step-2-html-code-to-display-alerts">Step 2: HTML code to display alerts</h2>

<figure class="highlight"><pre><code class="language-html" data-lang="html">    <span class="c">&lt;!-- section 1 / default --&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">ng-repeat=</span><span class="s">"alert in alerts | filter:{section:'1'}"</span> <span class="na">class=</span><span class="s">"alert alert-"</span> <span class="na">role=</span><span class="s">"alert"</span> <span class="na">close=</span><span class="s">"alert.close()"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"close"</span> <span class="na">data-dismiss=</span><span class="s">"alert"</span> <span class="na">aria-label=</span><span class="s">"Close"</span> <span class="na">ng-click=</span><span class="s">"alert.close()"</span><span class="nt">&gt;&lt;span</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;</span><span class="ni">&amp;times;</span><span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;/button&gt;</span> 
    <span class="nt">&lt;/div&gt;</span>
    
    ... some other html content

    <span class="c">&lt;!-- optional section 2 --&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">ng-repeat=</span><span class="s">"alert in alerts | filter:{section:'2'}"</span> <span class="na">class=</span><span class="s">"alert alert-"</span> <span class="na">role=</span><span class="s">"alert"</span> <span class="na">close=</span><span class="s">"alert.close()"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"close"</span> <span class="na">data-dismiss=</span><span class="s">"alert"</span> <span class="na">aria-label=</span><span class="s">"Close"</span> <span class="na">ng-click=</span><span class="s">"alert.close()"</span><span class="nt">&gt;&lt;span</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;</span><span class="ni">&amp;times;</span><span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;/button&gt;</span> 
    <span class="nt">&lt;/div&gt;</span></code></pre></figure>

<p>This HTML code snippet uses the ‘alerts’ array from the rootScope, iterates through it using ng-repeat and creates those many alert tags with appropriate class and message.</p>

<p>Notice the filter pipe of the div tag above. It filters out the alerts only for that specific section. 
Thus if your page has 2 separate sections for alerts, use second div mentioned above. 
In fact you can keep adding sections, but practically 2 should suffice.</p>

<h2 id="step-3-create-alerts-from-your-controllers-or-services">Step 3: Create alerts from your controllers or services</h2>

<p>Add alerts from your controllers/services</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="dl">'</span><span class="s1">SearchController</span><span class="dl">'</span><span class="p">,</span>
    <span class="p">[</span><span class="dl">'</span><span class="s1">$scope</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">$http</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">$state</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">AlertService</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">SearchService</span><span class="dl">'</span><span class="p">,</span>
        <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$http</span><span class="p">,</span> <span class="nx">$state</span><span class="p">,</span> <span class="nx">AlertService</span><span class="p">,</span> <span class="nx">SearchService</span><span class="p">)</span> <span class="p">{</span>
            
            <span class="c1">// Search</span>
            <span class="nx">$scope</span><span class="p">.</span><span class="nx">search</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
                <span class="nx">SearchService</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">criteria</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
                        <span class="nx">AlertService</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">warning</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">No search results found for the criteria</span><span class="dl">'</span><span class="p">);</span>
                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                        <span class="nx">AlertService</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}).</span><span class="k">catch</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">SEARCH_LIMIT_CROSSED</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
                        <span class="nx">AlertService</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">warning</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">Too many results found. Please refine your search criteria.</span><span class="dl">'</span><span class="p">);</span>
                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                        <span class="nx">AlertService</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">danger</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">No search results found</span><span class="dl">'</span><span class="p">);</span>
                    <span class="p">}</span>
                <span class="p">});</span>
            <span class="p">};</span>
    <span class="p">]);</span></code></pre></figure>

<h2 id="step-4-confirm">Step 4: Confirm</h2>
<figure>
 <a href="https://deepakvadgama.com/images/blog/sejal/search-results.png"><img src="https://deepakvadgama.com/images/blog/sejal/search-results.png" /></a>
</figure>

<p>Thats it. Now in every page you want alerts, just add <alert-service> directive in html and use AlertService in corresponding Controller.</alert-service></p>

<p>Hit me in the comments if you are stuck implementing this.</p>
:ET